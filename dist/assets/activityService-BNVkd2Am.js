import{f as D,i as e}from"./index-DmCLvhFB.js";class A{async getRecentActivities(n,t){let r=await D.simulateGetRecentActivities(n);if(t){if(t.types&&t.types.length>0&&(r=r.filter(a=>t.types.includes(a.type))),t.userId&&(r=r.filter(a=>a.userId===t.userId)),t.dateFrom&&(r=r.filter(a=>new Date(a.timestamp)>=new Date(t.dateFrom))),t.dateTo&&(r=r.filter(a=>new Date(a.timestamp)<=new Date(t.dateTo))),t.search){const a=t.search.toLowerCase();r=r.filter(i=>i.title.toLowerCase().includes(a)||i.description.toLowerCase().includes(a))}t.entityType&&(r=r.filter(a=>a.relatedEntityType===t.entityType))}return r}async deleteActivity(n){return D.simulateDeleteActivity(n)}async getActivityStats(n,t){const r=await this.getRecentActivities(void 0,{userId:n,dateFrom:t?.from,dateTo:t?.to}),a=r.reduce((c,E)=>(c[E.type]=(c[E.type]||0)+1,c),{}),i=this.groupActivitiesByDay(r),s=this.calculateEngagementScore(r),o=this.calculateActivityStreak(r);return{totalActivities:r.length,activitiesByType:a,activitiesByDay:i,engagementScore:s,streakDays:o,mostActiveDay:this.getMostActiveDay(i),averageActivitiesPerDay:this.getAverageActivitiesPerDay(i)}}groupActivitiesByDay(n){return n.reduce((t,r)=>{const a=new Date(r.timestamp).toDateString();return t[a]=(t[a]||0)+1,t},{})}calculateEngagementScore(n){const t={[e.GOAL_CREATED]:10,[e.GOAL_COMPLETED]:15,[e.GOAL_UPDATED]:5,[e.SKILL_ADDED]:8,[e.SKILL_LEVEL_UPDATED]:12,[e.LEARNING_ACTIVITY_COMPLETED]:12,[e.LEARNING_ACTIVITY_STARTED]:8,[e.EVENT_ATTENDED]:10,[e.RESOURCE_SHARED]:6,[e.PROFILE_UPDATED]:3,[e.CONNECTION_MADE]:7,[e.ACHIEVEMENT_EARNED]:15};return n.reduce((r,a)=>r+(t[a.type]||5),0)}calculateActivityStreak(n){if(n.length===0)return 0;const t=[...new Set(n.map(s=>new Date(s.timestamp).toDateString()))].sort((s,o)=>new Date(o).getTime()-new Date(s).getTime());let r=0;const a=new Date().toDateString(),i=new Date(Date.now()-1440*60*1e3).toDateString();if(t.includes(a)||t.includes(i)){let s=new Date;for(const o of t){const c=new Date(o);if(Math.floor((s.getTime()-c.getTime())/(1440*60*1e3))<=r+1)r++,s=c;else break}}return r}getMostActiveDay(n){let t=0,r="";for(const[a,i]of Object.entries(n))i>t&&(t=i,r=a);return r}getAverageActivitiesPerDay(n){const t=Object.keys(n).length,r=Object.values(n).reduce((a,i)=>a+i,0);return t>0?r/t:0}getActivityTypeIcon(n){switch(n){case e.GOAL_CREATED:case e.GOAL_UPDATED:return"target";case e.GOAL_COMPLETED:return"check-circle";case e.SKILL_ADDED:case e.SKILL_LEVEL_UPDATED:return"trending-up";case e.LEARNING_ACTIVITY_STARTED:case e.LEARNING_ACTIVITY_COMPLETED:return"book-open";case e.EVENT_ATTENDED:return"calendar";case e.RESOURCE_SHARED:return"share";case e.PROFILE_UPDATED:return"user";case e.CONNECTION_MADE:return"users";case e.ACHIEVEMENT_EARNED:return"award";default:return"activity"}}getActivityTypeColor(n){switch(n){case e.GOAL_CREATED:case e.GOAL_UPDATED:return"text-blue-600 bg-blue-50 border-blue-200";case e.GOAL_COMPLETED:return"text-green-600 bg-green-50 border-green-200";case e.SKILL_ADDED:case e.SKILL_LEVEL_UPDATED:return"text-purple-600 bg-purple-50 border-purple-200";case e.LEARNING_ACTIVITY_STARTED:return"text-orange-600 bg-orange-50 border-orange-200";case e.LEARNING_ACTIVITY_COMPLETED:return"text-green-600 bg-green-50 border-green-200";case e.EVENT_ATTENDED:return"text-indigo-600 bg-indigo-50 border-indigo-200";case e.RESOURCE_SHARED:return"text-teal-600 bg-teal-50 border-teal-200";case e.PROFILE_UPDATED:return"text-gray-600 bg-gray-50 border-gray-200";case e.CONNECTION_MADE:return"text-pink-600 bg-pink-50 border-pink-200";case e.ACHIEVEMENT_EARNED:return"text-yellow-600 bg-yellow-50 border-yellow-200";default:return"text-gray-600 bg-gray-50 border-gray-200"}}formatTimeAgo(n){const t=new Date,r=new Date(n),a=Math.floor((t.getTime()-r.getTime())/1e3);if(a<60)return"Just now";if(a<3600){const i=Math.floor(a/60);return`${i} minute${i!==1?"s":""} ago`}else if(a<86400){const i=Math.floor(a/3600);return`${i} hour${i!==1?"s":""} ago`}else if(a<2592e3){const i=Math.floor(a/86400);return`${i} day${i!==1?"s":""} ago`}else return r.toLocaleDateString()}}const T=new A;export{T as a};
