import{f as s}from"./index-DmCLvhFB.js";const v="mentorconnect_joined_events",c="mentorconnect_event_attendees",o=()=>{try{return JSON.parse(localStorage.getItem(v)||"[]")}catch{return[]}},d=e=>{localStorage.setItem(v,JSON.stringify(e))},i=e=>{try{return JSON.parse(localStorage.getItem(c)||"{}")[e]||[]}catch{return[]}},E=(e,t)=>{try{const n=JSON.parse(localStorage.getItem(c)||"{}");n[e]=t,localStorage.setItem(c,JSON.stringify(n))}catch{}},r=e=>new Promise(t=>setTimeout(t,e)),f={async getEvents(e){return s.getEvents()},async createEvent(e){return s.createEvent(e)},async updateEvent(e,t){return s.updateEvent(e,t)},async getEvent(e){return s.getEvent(e)},async getEventById(e){return s.getEvent(e)},async joinEvent(e,t){if(await r(300),Math.random()<.1)throw new Error("Failed to join event. Please try again.");const n=o();n.includes(e)||(n.push(e),d(n));const a=i(e);a.includes(t)||(a.push(t),E(e,a)),console.log(`✓ User ${t} joined event ${e}`)},async leaveEvent(e,t){if(await r(300),Math.random()<.1)throw new Error("Failed to leave event. Please try again.");const a=o().filter(l=>l!==e);d(a);const g=i(e).filter(l=>l!==t);E(e,g),console.log(`✓ User ${t} left event ${e}`)},async deleteEvent(e){if(await r(500),Math.random()<.1)throw new Error("Failed to delete event. Please try again.");const n=o().filter(a=>a!==e);d(n);try{const a=JSON.parse(localStorage.getItem(c)||"{}");delete a[e],localStorage.setItem(c,JSON.stringify(a))}catch{}console.log(`✓ Event ${e} deleted`)},async getEventAttendees(e){if(await r(200),Math.random()<.05)throw new Error("Failed to fetch attendees. Please try again.");return i(e)},hasUserJoinedEvent(e){return o().includes(e)},getAttendeeCount(e){return i(e).length},async getJoinedEvents(){await r(300);const e=o();return(await s.getEvents()).filter(n=>e.includes(n.id))}};export{f as e};
